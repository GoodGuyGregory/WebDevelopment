/* =====================================
   Grid Layout
======================================== */

.container {
  /*  sticks elements to the bottom of the page*/
  /*  relative height element*/
  height: 100vh;
  display: grid;
  /* column1 main
    colum2 aside*/
  grid-template-columns: 1fr;
  /*  row1: Header
      row2: main/Aside
      row3: footer element*/
      /*  Mobile first apprach defaults implicit 100px rows and minmax properties*/
  grid-auto-rows: 100px minmax(150px, auto);
  /* adds a gutter to the elements*/
  grid-gap: 10px;
  /*  activiates their name properties*/
  /*  each string creates a row and the string repeated will dictate columns*/
  /*  ASCII Grid mwethod */

  grid-template-areas:
  /* mobile first approach:*/
  "header"
  "nav"
  "main"
  "aside"
  "footer";
}

/* grid items are targeted in selectors */
header {
  /*  controls the lines it will span*/
  /* grid-column-start: 1;
  grid-column-end: -1; */
  /*  short hand syntax applies*/
  /* grid-column: 1/-1; */
  /*  Grid area properties allow for naming them and assigning location as well*/
  grid-area: header;
}

nav {
    grid-area: nav;
}

main {
  /* grid-row-start: 2; */
  /* grid-row-end: 3; */
  grid-area: main;
}

aside {
  /* grid-row-start: 2; */
  /* grid-row-end: -1; */
  grid-area: aside;
}
/* select the whole bottom as a stretching zone for the footer element */
footer {
  /* grid-row-start: 3; */
  /* grid-row-end: -1; */
  grid-area: footer;
}

@media (min-width: 750px) {
  .container {
    grid-template-columns: 1fr 2fr 1fr;
    /*  min-max allows for the auto use properties*/
    grid-template-rows: 100px minmax(250px, auto) 100px;
    grid-template-areas:
    "header header header"
    "nav main aside"
    "footer footer footer";
  }
}

@media (min-width: 992px) {
  .container {
    grid-template-areas:
    "header header header"
    "nav main aside"
    "nav footer footer";
  }
}
